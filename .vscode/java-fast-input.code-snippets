{
    "Fast Input Class": {
        "prefix": "fastInputClass",
        "body": [
            "import java.io.BufferedReader;",
            "import java.io.InputStreamReader;",
            "import java.io.BufferedWriter;",
            "import java.io.OutputStreamWriter;",
            "import java.io.PrintWriter;",
            "import java.io.IOException;",
            "import java.util.StringTokenizer;",
            "",
            "class FastInput {",
            "    private BufferedReader br;",
            "    private StringTokenizer st;",
            "",
            "    public FastInput() {",
            "        br = new BufferedReader(new InputStreamReader(System.in));",
            "    }",
            "",
            "    public String next() throws IOException {",
            "        while (st == null || !st.hasMoreTokens()) {",
            "            st = new StringTokenizer(br.readLine());",
            "        }",
            "        return st.nextToken();",
            "    }",
            "",
            "    public int nextInt() throws IOException {",
            "        return Integer.parseInt(next());",
            "    }",
            "",
            "    public long nextLong() throws IOException {",
            "        return Long.parseLong(next());",
            "    }",
            "",
            "    public double nextDouble() throws IOException {",
            "        return Double.parseDouble(next());",
            "    }",
            "",
            "    public String nextLine() throws IOException {",
            "        if (st == null || !st.hasMoreTokens()) {",
            "            return br.readLine();",
            "        }",
            "        StringBuilder sb = new StringBuilder();",
            "        while (st.hasMoreTokens()) {",
            "            sb.append(st.nextToken());",
            "            if (st.hasMoreTokens()) {",
            "                sb.append(\" \");",
            "            }",
            "        }",
            "        return sb.toString();",
            "    }",
            "}"
        ],
        "description": "FastInput class for efficient input handling"
    },
    "Main Class with FastInput": {
        "prefix": "mainWithFastInput",
        "body": [
            "public class ${1:MainClass} {",
            "    public static void main(String[] args) throws IOException {",
            "        FastInput in = new FastInput();",
            "        FastOutput out = new FastOutput();",
            "",
            "        out.flush();",
            "    }",
            "}"
        ],
        "description": "Main class demonstrating usage of FastInput class"
    },
    "Fast Output Template": {
        "prefix": "fastOutput",
        "body": [
            "class FastOutput {",
            "    private PrintWriter pw;",
            "",
            "    public FastOutput() {",
            "        pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));",
            "    }",
            "",
            "    public void print(String s) {",
            "        pw.print(s);",
            "    }",
            "",
            "    public void println(String s) {",
            "        pw.println(s);",
            "    }",
            "",
            "    public void flush() {",
            "        pw.flush();",
            "    }",
            "}"
        ],
        "description": "FastOutput class for efficient output handling"
    }
}